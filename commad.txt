git fetch --prune

const dbData = db
.createUser({
  user: "user",
  pwd: "pass",
  roles: [
    "userAdminAnyDatabase",
    "dbAdminAnyDatabase",
    "readWriteAnyDatabase",
    "restore",
    "backup",
  ],
})
.then((res) => {
  console.log("res++++", res);
})
.catch((err) => {
  console.log("err++++", err);
});


# Drop database user
[
  "dhairya.chavda_Development",
  "dhairya.chavda_Acceptance",
  "dhairya.chavda_Production",
  "comiro3128_Development",
  "comiro3128_Acceptance",
  "comiro3128_Production",
  "gafofe1427_Development",
  "gafofe1427_Acceptance",
  "gafofe1427_Production",
  "dixic32665_Development",
  "dixic32665_Acceptance",
  "dixic32665_Production",
].forEach((user) => {
  db.dropUser(user);
});

# Drop database
[
  "671b295efc2da644e74962c9_Development",
  "671b295efc2da644e74962c9_Acceptance",
  "671b295efc2da644e74962c9_Production",

  "6758071e2c27c4043cdba733_Development",
  "6758071e2c27c4043cdba733_Acceptance",
  "6758071e2c27c4043cdba733_Production",

  "67580dfe54c184da02eaf319_Development",
  "67580dfe54c184da02eaf319_Acceptance",
  "67580dfe54c184da02eaf319_Production",

  "67581e4854c184da02eaf56e_Development",
  "67581e4854c184da02eaf56e_Acceptance",
  "67581e4854c184da02eaf56e_Production",
].forEach((database) => {
  db.getMongo().getDB(database);
  print("dropping db " + database);
  db.dropDatabase();
});

mongorestore --uri="mongodb+srv://<username>:<password>@<cluster-url>/dbname" --db=test folder/*
mongodump --uri="mongodb+srv://<username>:<password>@<cluster-url>/dbname" --out=/path/to/backup

sudo chown -R $USER /folder

db.getCollectionNames().forEach((cn)=> cn.includes("_revision") && db.collection(cn).drop())

# Protected branches
protected=("development" "acceptance" "master")

# Fetch latest remote changes and prune deleted branches
git fetch --prune

# Loop through local branches
for branch in $(git branch | sed 's/..//'); do
  # Skip protected branches
  if [[ " ${protected[@]} " =~ " $branch " ]]; then
    continue
  fi

  # If branch is not on remote, delete it
  if ! git show-ref --quiet refs/remotes/origin/$branch; then
    echo "Deleting local branch: $branch (not on remote)"
    git branch -D "$branch"
  fi
done

sudo usermod -aG docker $USER
newgrp docker



cd ~/Downloads

chmod +x Cursor-1.1.3-x86_64.AppImage

sudo apt update
sudo apt install libfuse2

sudo mv ~/Downloads/Cursor-1.1.3-x86_64.AppImage /opt/cursor.appimage

sudo mv ~/Downloads/cursor.png /opt/cursor.png

sudo vim /usr/share/applications/cursor.desktop
[Desktop Entry]
Name=Cursor AI IDE
Exec=/opt/cursor.appimage --no-sandbox %U
Terminal=false
Type=Application
Icon=/opt/cursor.png
StartupWMClass=Cursor
Comment=Cursor is an AI-first coding environment.
Categories=Development;

sudo chmod +x /usr/share/applications/cursor.desktop
